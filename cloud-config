#cloud-config


# Stores the public key for SSH shared-key authentication, update with your SSH RSA public key
ssh_authorized_keys:
  - ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEA4giEY9NfIhEd16jBxAYSDAx+Drc0bV09rYaIyitUNrbpKVQ0Nm2yYn3VgKrPZnUEcNgtLTD1nB68QzfIJfWgQhv0V+z/EhnNDoAkxvFrW1MNDBzgrtHJEKvkVacI7zEAA/TLkrvyyVDjC3ETtA2Pye6l2Lnq5gDrgcJ6Q8eOM3LroH5E8jXmCSQI4xJuILl9M/glBapzJb/R85O02v9KpBOQJSrGmSKnWzxWaNvjnBvylkUZ8vd6i7yuby4RwhBgohgF9FP0MUHT/bqx8lVZUjiqNZUtsaxdH5SsEdMlMXKcLw/Q5d9VEMDFWxESKc0h8mT6INCVLFlGqJicijQylw==
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3ckcUy+ysoytNKdqdyVUCp3TVQlfrVZwlLWWY10t43qrCo+3+8Ccd/Or7HPERUyKQu7fW+Cd8J766ckdcZPSn6Fk6PFf87jHsVqcin5mmhF3T74oFlEg4b++ieKcNKjFH9DopvclzIA07AuZMfbNe1tumak+O2FMkelkHTsUQ7QiJ/etYPmJ+FpD9KnTiHm6eF5wmrobxuavOLIhP9JvlzM6E3uNV+B6S7geqH9wRxEDBVLUQVnZQAtiZlk8RUmJsMHfHBx4Vg3Uqs8/pCPf1tJPOqkIsxzvGHn+wB9ypsvY190aAW1CvAIHM5fL82seKfpPHo9078qDz32mZ7wQn

coreos:
  etcd2:
    # generate a new token for each unique cluster from https://discovery.etcd.io/new?size=2
    # specify the initial size of your cluster with ?size=X
    discovery: https://discovery.etcd.io/36fb1dff80eb51a60d044f30ee3ec3e1
    advertise-client-urls: http://$private_ipv4:2379,http://$private_ipv4:4001
    initial-advertise-peer-urls: http://$private_ipv4:2380
    # listen on both the official ports and the legacy ports
    # legacy ports can be omitted if your application doesn't depend on them
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    listen-peer-urls: http://$private_ipv4:2380

  units:
    - name: etcd2.service
      command: start
    - name: fleet.service
      command: start

# Creates an LVM thinpool for Docker storage, will only run if the logical volume does not exist
# Change /dev/sdb to the disk you want to use for Docker storage
    - name: create-docker-lvm-thinpool.service
      command: start
      content: |
        [Unit]
        After=lvm2-monitor.service
        Requires=lvm2-monitor.service
        ConditionPathExists=!/dev/mapper/docker-thinpool
        [Service]
        Type=oneshot
        ExecStart=/usr/sbin/pvcreate /dev/sdb
        ExecStart=/usr/sbin/vgcreate docker /dev/sdb
        ExecStart=/usr/sbin/lvcreate --wipesignatures y -n thinpool docker -l 95%VG
        ExecStart=/usr/sbin/lvcreate --wipesignatures y -n thinpoolmeta docker -l 1%VG
        ExecStart=/usr/sbin/lvconvert -y --zero n -c 512K --thinpool docker/thinpool --poolmetadata docker/thinpoolmeta
        ExecStart=/usr/sbin/lvchange --metadataprofile docker-thinpool docker/thinpool


# Updates the systemd Docker service to use Direct LVM storage and changes the container size to 25GB
# Requires the LVM thinpool from the previous unit exists
    - name: docker.service
      drop-ins:
        - name: 10.docker_opts.conf
          content: |
            [Service]
            Environment="DOCKER_OPTS=--storage-driver=devicemapper --storage-opt=dm.thinpooldev=/dev/mapper/docker-thinpool --storage-opt=dm.use_deferred_removal=true --storage-opt=dm.basesize=25G"


# Creates a new LVM volume group for custom logical volumes, will only run if the volume group does not exist
# Change /dev/sdc to the disk you want to use for the data volume group
    - name: create-data-volume-group.service
      command: start
      content: |
        [Unit]
        Description=Create data volume group
        After=lvm2-activation.service
        Requires=lvm2-activation.service
        ConditionPathExists=/etc/check_vg.sh
        [Service]
        Type=oneshot
        ExecStart=/bin/sh /etc/check_vg.sh data /dev/sdc


# Creates a new LVM volume and file system for storing installation files, will only run if the logical volume does not exist
    - name: create-oracledata-volume.service
      command: start
      content: |
        [Unit]
        Description=Create oracledata logical volume and create an ext4 filesystem
        After=create-data-volume-group.service
        Requires=create-data-volume-group.service
        ConditionPathExists=!/dev/mapper/data-oracledata
        [Service]
        Type=oneshot
        ExecStart=/usr/sbin/lvcreate -y -n oracledata data -l 30%VG
        ExecStart=/usr/sbin/mkfs.ext4 /dev/mapper/data-oracledata


write_files:

# Required for the volume group check
  - path: /etc/check_vg.sh
    owner: root
    content: |
      if ! $(/usr/sbin/vgs $1 >/dev/null 2>&1); then
        /usr/sbin/pvcreate $2
        /usr/sbin/vgcreate $1 $2
        /usr/sbin/vgs $1 >/dev/null 2>&1
      fi

# Required for the Docker storage LVM thinpool
  - path: /etc/lvm/profile/docker-thinpool.profile
    permissions: 0644
    owner: root
    content: |
      activation {
          thin_pool_autoextend_threshold=80
          thin_pool_autoextend_percent=20
      }


# Add bash profile preferences
  - path: /etc/profile.env
    content: |
      alias ll='ls -l --color=auto'
      export PATH=$PATH:/opt/bin
