
    - name: Create rac1 container post binary install
      include: ../../common/tasks/start_rac_node.yml this_rac_node="{{ first_rac_node }}" this_image=giinstalled
      tags:
        - start_rac1_container_post_install

    - block:
        - name: Configure grid infrastructure binaries
          command: >
                 /usr/bin/docker exec {{ first_rac_node }} su -
                 {{
                   operating_system.grid_infrastructure.users |
                   selectattr('title', 'equalto', 'owner') |
                   map(attribute='name') |
                   first
                 }} -c "/u01/app/12.1.0/grid/crs/config/config.sh
                 {{
                   installation_files |
                   selectattr('type', 'equalto', 'grid') |
                   map(attribute='configuration_parameters') |
                   first | join(' ')
                 }}"
          register: configure_grid_binaries_result
          changed_when: (configure_grid_binaries_result.rc == 0 ) or (configure_grid_binaries_result.rc == 6 )
          failed_when: (configure_grid_binaries_result.rc != 0) and (configure_grid_binaries_result.rc != 6 )
      always:
        - name: Print readable previous command output
          debug:
            var: configure_grid_binaries_result.stdout_lines
      tags:
        - configure_grid
        - docker

    - block:
        - name: Modify the root script to show output
          command: "/usr/bin/docker exec {{ first_rac_node }} sed -i '/rootmacro.sh/s/$/ -stdout/' /u01/app/12.1.0/grid/root.sh"
          
        - name: Run grid infrastructure root scripts
          command: "/usr/bin/docker exec {{ first_rac_node }} /u01/app/12.1.0/grid/root.sh"
          register: configure_grid_root_result
      tags:
        - configure_grid_root
        - docker

    - block:
        - name: Create grid tools config response file
          lineinfile:
            dest: "{{ operating_system.rac_node_directory }}/tools_config.rsp"
            state: present
            create: yes
            line: "{{ item }}"
            mode: 0644
          become: True
          with_items:
            - "{{ installation_files | selectattr('type', 'equalto', 'grid') | map(attribute='tools_configuration_parameters') | first | list }}"

        - name: Configure grid infrastructure tools
          command: >
                 /usr/bin/docker exec {{ first_rac_node }} su -
                 {{
                   operating_system.grid_infrastructure.users |
                   selectattr('title', 'equalto', 'owner') |
                   map(attribute='name') |
                   first
                 }} -c "/u01/app/12.1.0/grid/cfgtoollogs/configToolAllCommands RESPONSE_FILE=/usr/lib/custom_services/tools_config.rsp"
          register: configure_grid_tools_result
      always:
        - name: Print readable previous command output
          debug:
            var: configure_grid_tools_result.stdout_lines

        - name: Remove grid tools config response file
          file:
            path: "{{ operating_system.rac_node_directory }}/tools_config.rsp"
            state: absent
          become: True
      tags:
        - configure_grid_tools
        - docker

    - name: Relink database binaries for RAC
      command: >
             /usr/bin/docker exec {{ first_rac_node }} su -
             {{
               operating_system.database.users |
               selectattr('title', 'equalto', 'owner') |
               map(attribute='name') |
               first
             }} -c "export ORACLE_HOME=/u01/app/oracle/product/12.1.0/dbhome_1 && make -f $ORACLE_HOME/rdbms/lib/ins_rdbms.mk rac_on && make -f $ORACLE_HOME/rdbms/lib/ins_rdbms.mk ioracle"
      tags:
        - relink_database_binaries_for_rac
        - docker
