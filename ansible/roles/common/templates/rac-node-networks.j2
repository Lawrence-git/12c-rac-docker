#!/bin/bash


NSPID=$(/usr/bin/docker inspect --format={% raw %}'{{ .State.Pid }}'{% endraw %} {{ item.name }})

/usr/bin/rm -rf "/var/run/netns/${NSPID?}"
/usr/bin/mkdir -p "/var/run/netns"
/usr/bin/ln -s "/proc/${NSPID?}/ns/net" "/var/run/netns/${NSPID?}"

{% for network in item.networks %}
BRIDGE=$(/usr/bin/docker network ls -q -f NAME={{ network.name }})
/usr/bin/ip link del dev {{ network.external_network_name }} 2>/dev/null
/usr/bin/ip link add name {{ network.external_network_name }} mtu 1500 type veth peer name {{ network.internal_network_name }} mtu 1500
/usr/bin/sleep 5
/usr/bin/ip link set {{ network.external_network_name }} master br-${BRIDGE?}
/usr/bin/ip link set {{ network.external_network_name }} up
/usr/bin/ip link set {{ network.internal_network_name }} netns ${NSPID?}
/usr/bin/ip netns exec ${NSPID?} /usr/bin/ip link set {{ network.internal_network_name }} up

/usr/bin/docker exec {{ item.name }} \
/usr/bin/rm -f /etc/systemd/system/dhclient-{{ item.name }}-{{ network.internal_network_name }}.service

/usr/bin/docker exec {{ item.name }} \
/usr/bin/ln -s \
/usr/lib/custom_services/dhclient-{{ item.name }}-{{ network.internal_network_name }}.service \
/etc/systemd/system/dhclient-{{ item.name }}-{{ network.internal_network_name }}.service

/usr/bin/docker exec {{ item.name }} \
/usr/bin/systemctl stop dhclient-{{ item.name }}-{{ network.internal_network_name }}.service

/usr/bin/docker exec {{ item.name }} \
/usr/bin/systemctl daemon-reload

/usr/bin/docker exec {{ item.name }} \
/usr/bin/systemctl start dhclient-{{ item.name }}-{{ network.internal_network_name }}.service

{% endfor %}

/usr/bin/rm -rf "/var/run/netns/${NSPID?}"
